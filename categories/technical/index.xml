<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Technical on nRT</title>
    <link>http://nishanttotla.com/categories/technical/</link>
    <description>Recent content in Technical on nRT</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 15 Nov 2016 03:32:11 -0500</lastBuildDate>
    <atom:link href="http://nishanttotla.com/categories/technical/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Conference Travel in 2016</title>
      <link>http://nishanttotla.com/blog/conference-travel-2016/</link>
      <pubDate>Tue, 15 Nov 2016 03:32:11 -0500</pubDate>
      
      <guid>http://nishanttotla.com/blog/conference-travel-2016/</guid>
      <description>

&lt;p&gt;I&amp;rsquo;ve been fortunate to have traveled extensively during the Fall of 2016.
A good chunk of that travel was because of work. Back in September, I visited London
and St. Louis (Missouri), and attended three different conferences. Later in October,
I flew back to Europe, this time to Berlin to attend my fourth conference in two months&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:438665085d42b12aa98e7fb2070409e1:1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:438665085d42b12aa98e7fb2070409e1:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;.
This post focuses on the conferences. I&amp;rsquo;ll write more about the sightseeing I did
in future posts.&lt;/p&gt;

&lt;h3 id=&#34;containercamp:438665085d42b12aa98e7fb2070409e1&#34;&gt;ContainerCamp&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://container.camp/uk/2016&#34;&gt;ContainerCamp&lt;/a&gt; was a one day conference in London, focusing
on topics in software container technology, with 12 talks by people in different
areas. I gave a talk on the project I&amp;rsquo;m currently working on,
&lt;a href=&#34;https://www.github.com/docker/swarmkit&#34;&gt;Docker SwarmKit&lt;/a&gt;,
the open-source container orchestration framework, which was also my
first conference talk ever! That I would be delivering this talk was confirmed
rather late, which gave me little time to prepare and get a UK visa, but things
somehow worked out (my visa arrived the morning I was scheduled to leave), and I
made it to London &amp;ndash; my second visit to the city after last year&amp;rsquo;s UK trip.&lt;/p&gt;

&lt;p&gt;The conference itself was held at Picturehouse Central, a movie theater in
Piccadilly Circus, which I thought was a very unique venue for a conference.
Talks were projected on to a huge movie screen!&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet tw-align-center&#34; data-lang=&#34;en&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;From the source: how &lt;a href=&#34;https://twitter.com/docker&#34;&gt;@docker&lt;/a&gt; sees orchestration and tolerating failure in orchestration &lt;a href=&#34;https://twitter.com/nishanttotla&#34;&gt;@nishanttotla&lt;/a&gt; &lt;a href=&#34;https://twitter.com/containercamp&#34;&gt;@containercamp&lt;/a&gt; &lt;a href=&#34;https://t.co/Ju7OH8qeCB&#34;&gt;pic.twitter.com/Ju7OH8qeCB&lt;/a&gt;&lt;/p&gt;&amp;mdash; Alex Ellis (@alexellisuk) &lt;a href=&#34;https://twitter.com/alexellisuk/status/774194023208738816&#34;&gt;September 9, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;I think I did a decent job for a first talk, which also included a live demo and
a shoutout by Mark Shuttleworth! The talk video is
&lt;a href=&#34;https://www.youtube.com/watch?v=SLHMkVQnJOs&#34;&gt;here&lt;/a&gt;, in case you&amp;rsquo;re interested.
Among other talks, I particularly enjoyed the following ones&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=Utf-A4rODH8&#34;&gt;Building a container from scratch in Go&lt;/a&gt; by Liz Rice&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=0z3yusiCOCk&#34;&gt;Why we need a different container purely for apps&lt;/a&gt; by Mark Shuttleworth&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All talks, including the ones above are on the
&lt;a href=&#34;https://www.youtube.com/channel/UCvksXSnLqIVM_uFB7xyrsSg&#34;&gt;YouTube channel&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;After ContainerCamp, I had roughly four days to explore London. From there, I flew
directly to St. Louis, for the next couple of conferences.&lt;/p&gt;

&lt;h3 id=&#34;papers-we-love-conference-pwlconf:438665085d42b12aa98e7fb2070409e1&#34;&gt;Papers We Love Conference (PWLConf)&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;http://paperswelove.org/&#34;&gt;Papers We Love&lt;/a&gt; is a series of meetups in different cities
around the world, where people come together to discuss research papers they love
from different fields. Given its popularity, the organizers decided to set up the
first PWL conference, which was co-located with Strange Loop in St. Louis.
PWLConf was actually the only conference I was meant to attend, until some
fortuitous events allowed me to attend Strange Loop as well.&lt;/p&gt;

&lt;p&gt;I really enjoyed the talks, particularly because they were quite academic in
nature, and I&amp;rsquo;ve missed academic talks since leaving grad school. There were some
I particularly enjoyed&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=Gxf5glthqrk&amp;amp;index=1&amp;amp;list=PLGRqfvsPiRShwIXMA5P3WR_9LgBOAdvw4&#34;&gt;Randomized Gossip Methods&lt;/a&gt; by Dahlia Malkhi&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=aR_UOSGEizE&amp;amp;list=PLGRqfvsPiRShwIXMA5P3WR_9LgBOAdvw4&amp;amp;index=5&#34;&gt;Design Philosophy in Networked Systems&lt;/a&gt; by Justine Sherry&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Once again, all videos are on the
&lt;a href=&#34;https://www.youtube.com/playlist?list=PLGRqfvsPiRShwIXMA5P3WR_9LgBOAdvw4&#34;&gt;YouTube channel&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;strange-loop:438665085d42b12aa98e7fb2070409e1&#34;&gt;Strange Loop&lt;/h3&gt;

&lt;p&gt;My attendance at Strange Loop was fortunate. Strange Loop is an annual software
conference held in St. Louis, covering really intriguing and eclectic topics
related to software, mathematics, or their applications to other areas. Other
industry conferences that I&amp;rsquo;ve been to have had extremely specific focus, including
a lot of vendors advertising their products. Strange Loop was nothing like that, and
all talks I attended could basically be put under one umbrella &amp;ndash;
&amp;ldquo;the joy of Computer Science&amp;rdquo;. I also got to meet and talk to some people whom
I&amp;rsquo;d only followed on Twitter before. Since there were too many parallel tracks,
I couldn&amp;rsquo;t attend all interesting talks, but out of the ones I did, some really
stood out&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=C4rT0lgJr6U&#34;&gt;Government Hacking and Human Rights: The Why and the How&lt;/a&gt; by Amie Stepanovich&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=fNe1i7nVbXI&#34;&gt;Humanities x Technology&lt;/a&gt; by Ashley Nelson-Hornstein&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=HfD9IMZ9rKY&#34;&gt;Systems programming as a swiss army knife&lt;/a&gt; by Julia Evans&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Once again, all talk videos are now online on the &lt;a href=&#34;https://www.youtube.com/watch?v=C4rT0lgJr6U&amp;amp;list=PLcGKfGEEONaDvuLDFFKRfzbsaBuVVXdYa&#34;&gt;YouTube channel&lt;/a&gt;, and worth watching.&lt;/p&gt;

&lt;h3 id=&#34;docker-distributed-systems-summit:438665085d42b12aa98e7fb2070409e1&#34;&gt;Docker Distributed Systems Summit&lt;/h3&gt;

&lt;p&gt;A small invitation-only event, the summit was a great way to meet people
directly engaged in the Docker community. A part of the attraction was also the
chance to visit Berlin for the first time. Once again, late confirmations led to
rushed planning, and some good fortune allowed me to get a visa in time. My job was
only to attend the talks, engage with people, and lead some discussions. I thought
this was a great format for two reasons &amp;ndash; I got to learn more about Docker&amp;rsquo;s
other products myself, and the small size of the conference enabled many
personal interactions that allowed for deeper conversations.
The &lt;a href=&#34;https://blog.docker.com/2016/10/docker-distributed-system-summit-videos-podcast-episodes/&#34;&gt;official blog post&lt;/a&gt; contains links to
the talk videos, slides, and other information.&lt;/p&gt;

&lt;h3 id=&#34;on-conference-travel-in-general:438665085d42b12aa98e7fb2070409e1&#34;&gt;On Conference Travel in General&lt;/h3&gt;

&lt;p&gt;Overall, these were rewarding trips, albeit tiring. Being away from home for all
these days sounds great in principle, but as I found out, travel is rather
disruptive when it&amp;rsquo;s not purely for vacation. Still, I&amp;rsquo;m incredibly lucky to
have had all these opportunities. In fact, this was one of the primary reasons I
joined Docker. I&amp;rsquo;m looking forward to doing more of this in 2017, but
probably with a little more focus.&lt;/p&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:438665085d42b12aa98e7fb2070409e1:1&#34;&gt;I also attended a fifth conference this year, back in June &amp;ndash; DockerCon 2016. This was my first DockerCon, and a pretty interesting affair. For one, it gave me significant motivation to work hard preceding the event, and the project I was working on was at the center of major announcements. I also ended up staying for the week in Seattle, so that was great as well. I decided not to write much about DockerCon in this post because I barely attended any talks (booth duty!), and enough has already been written by others about it.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:438665085d42b12aa98e7fb2070409e1:1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Signing Git Commits with a GPG Key</title>
      <link>http://nishanttotla.com/blog/signing-git-commits-gpg/</link>
      <pubDate>Wed, 13 Apr 2016 14:18:26 -0700</pubDate>
      
      <guid>http://nishanttotla.com/blog/signing-git-commits-gpg/</guid>
      <description>

&lt;p&gt;In my &lt;a href=&#34;http://nishanttotla.com/blog/playing-with-keybase-io/&#34;&gt;last post&lt;/a&gt;, I described public key encryption and how you can generate new PGP keys using &lt;a href=&#34;https://keybase.io/&#34;&gt;Keybase&lt;/a&gt;. That was just a start, and PGP keys have several uses. One of the first things I wanted to do was to start signing all my Git commits.&lt;/p&gt;

&lt;h3 id=&#34;why-sign-commits:2956a9e0886a6b1ebeb547ba30f1e87b&#34;&gt;Why Sign Commits?&lt;/h3&gt;

&lt;p&gt;Recent versions of Git (v1.7.9 and above) introduced the ability to sign commits using a GPG key. A signed commit can be verified to make sure that you wrote the code that you claim you did. If you write software as part of a small team where everyone physically meets each other, you likely don&amp;rsquo;t need to do it, but for many open source projects where contributors often never meet physically, &lt;a href=&#34;https://mikegerwitz.com/papers/git-horror-story&#34;&gt;this becomes important&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;At Docker, we ask contributors to sign their commits using their email id (the &lt;code&gt;-s&lt;/code&gt; option)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git commit -s -m &amp;quot;commit message&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This doesn&amp;rsquo;t do much, except for adding a &lt;code&gt;Signed-off-by&lt;/code&gt; line to your commit message, picking up your &lt;a href=&#34;https://help.github.com/articles/setting-your-email-in-git/&#34;&gt;name and email&lt;/a&gt; from the Git config.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git log -1
commit 17cc085744936123a023b1535f9adadd2f180332
Author: Nishant Totla &amp;lt;nishanttotla@gmail.com&amp;gt;
Date:   Thu Apr 7 14:17:32 2016 -0700

    commit message

    Signed-off-by: Nishant Totla &amp;lt;nishanttotla@gmail.com&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This is obviously easy to fake, and not as trustworthy as signing your commits with a trusted GPG key.&lt;/p&gt;

&lt;p&gt;If you&amp;rsquo;re new to encryption, this guide will hopefully help you get started with signing commits. I use a Mac, so make sure to adapt instructions to your environment. If you already have GPG installed, and a key in your keyring, then you can jump to the second half.&lt;/p&gt;

&lt;h3 id=&#34;setting-up-a-key:2956a9e0886a6b1ebeb547ba30f1e87b&#34;&gt;Setting up a Key&lt;/h3&gt;

&lt;p&gt;This article focuses on exporting your Keybase key to GPG, and moving from there. If you want to generate a key using GPG, there are &lt;a href=&#34;https://help.ubuntu.com/community/GnuPrivacyGuardHowto&#34;&gt;other articles&lt;/a&gt; you might want to read first.&lt;/p&gt;

&lt;p&gt;Install GPG using Homebrew&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ brew install gpg
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This is a fresh install, and we generated a PGP key using Keybase earlier (so it&amp;rsquo;s not part of the GPG keyring). It can be exported easily though&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ keybase pgp export --secret &amp;gt; secret-key.asc
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This stores the secret key into the file &lt;code&gt;secret-key.asc&lt;/code&gt;. This is temporary and MUST be deleted as soon as the import to GPG is finished&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ gpg --allow-secret-key-import --import secret-key.asc
gpg: key 9B3D0C19: secret key imported
gpg: key 9B3D0C19: public key &amp;quot;Nishant Totla &amp;lt;nishanttotla@gmail.com&amp;gt;&amp;quot; imported
gpg: Total number processed: 1
gpg:               imported: 1  (RSA: 1)
gpg:       secret keys read: 1
gpg:   secret keys imported: 1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The import succeeded, &lt;code&gt;9B3D0C19&lt;/code&gt; is the shortened public key signature. Make sure you delete &lt;code&gt;secret-key.asc&lt;/code&gt;. If you type &lt;code&gt;gpg --list-keys&lt;/code&gt;, you should be able to see the key that was just added.&lt;/p&gt;

&lt;h3 id=&#34;adding-the-key-to-git-config:2956a9e0886a6b1ebeb547ba30f1e87b&#34;&gt;Adding the Key to Git Config&lt;/h3&gt;

&lt;p&gt;Git needs to know which key to sign your commits with. Providing that information is dead simple!&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git config --global user.signingkey 9B3D0C19
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can also set a project-specific key with the &lt;code&gt;--local&lt;/code&gt; flag instead. That&amp;rsquo;s it! Now you can start signing commits with the &lt;code&gt;-S&lt;/code&gt; flag&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git commit -S -m &amp;quot;commit message&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Note that &lt;code&gt;-S&lt;/code&gt; is different from &lt;code&gt;-s&lt;/code&gt;. The former signs with a GPG key, the latter only adds a &lt;code&gt;Signed-off-by&lt;/code&gt; line to the commit message. You can certainly use both together.&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s easy to forget &lt;code&gt;-S&lt;/code&gt; each time, but fortunately Git allows you add a setting to always sign commits&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git config --global commit.gpgsign true
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;updating-trust-level-for-the-key:2956a9e0886a6b1ebeb547ba30f1e87b&#34;&gt;Updating Trust Level for the Key&lt;/h3&gt;

&lt;p&gt;If you tried a commit with the new setup, and checked the commit logs, you might see a small issue&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git log --show-signature -1
commit 302a1df09726ca7387b7b4ce089cfedc5fafef88
gpg: Signature made Tue Apr 12 16:14:13 2016 PDT using RSA key ID 9B3D0C19
gpg: Good signature from &amp;quot;Nishant Totla &amp;lt;nishanttotla@gmail.com&amp;gt;&amp;quot;
gpg: WARNING: This key is not certified with a trusted signature!
gpg:          There is no indication that the signature belongs to the owner.
Primary key fingerprint: 672F 675C 8084 5DE2 C29A  CFD3 7EA5 781C 9B3D 0C19
Author: Nishant Totla &amp;lt;nishanttotla@gmail.com&amp;gt;
Date:   Tue Apr 12 16:14:13 2016 -0700

    commit message

    Signed-off-by: Nishant Totla &amp;lt;nishanttotla@gmail.com&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;See the warning? It&amp;rsquo;s because GPG doesn&amp;rsquo;t know if this is a trusted key. That can be fixed by interactively editing they key&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ gpg --edit-key 9B3D0C19
gpg (GnuPG) 1.4.20; Copyright (C) 2015 Free Software Foundation, Inc.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Secret key is available.

pub  4096R/9B3D0C19  created: 2016-04-08  expires: 2032-04-04  usage: SC
                     trust: unknown       validity: unknown
[ unknown] (1). Nishant Totla &amp;lt;nishanttotla@gmail.com&amp;gt;

gpg&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This opens a console to edit the key. In the console, type &lt;code&gt;trust&lt;/code&gt; and set the key to highest trust level.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;gpg&amp;gt; trust
pub  4096R/9B3D0C19  created: 2016-04-08  expires: 2032-04-04  usage: SC
                     trust: unknown       validity: unknown
[ unknown] (1). Nishant Totla &amp;lt;nishanttotla@gmail.com&amp;gt;

Please decide how far you trust this user to correctly verify other users&#39; keys
(by looking at passports, checking fingerprints from different sources, etc.)

  1 = I don&#39;t know or won&#39;t say
  2 = I do NOT trust
  3 = I trust marginally
  4 = I trust fully
  5 = I trust ultimately
  m = back to the main menu

Your decision? 5
Do you really want to set this key to ultimate trust? (y/N) y

pub  4096R/9B3D0C19  created: 2016-04-08  expires: 2032-04-04  usage: SC
                     trust: ultimate      validity: unknown
[ unknown] (1). Nishant Totla &amp;lt;nishanttotla@gmail.com&amp;gt;
Please note that the shown key validity is not necessarily correct
unless you restart the program.

gpg&amp;gt; quit
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To check that it worked&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ gpg --list-keys --list-options show-uid-validity
/Users/NishantTotla/.gnupg/pubring.gpg
--------------------------------------
pub   4096R/9B3D0C19 2016-04-08 [expires: 2032-04-04]
uid       [ultimate] Nishant Totla &amp;lt;nishanttotla@gmail.com&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Note that &lt;code&gt;[ultimate]&lt;/code&gt; now shows up in the details. Try looking at commit logs again, and the problem should be fixed!&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git log --show-signature -1
commit f2de8c24b72c2978126899dbe49cb8c9973ae00b
gpg: Signature made Tue Apr 12 17:14:00 2016 PDT using RSA key ID 9B3D0C19
gpg: Good signature from &amp;quot;Nishant Totla &amp;lt;nishanttotla@gmail.com&amp;gt;&amp;quot;
Author: Nishant Totla &amp;lt;nishanttotla@gmail.com&amp;gt;
Date:   Tue Apr 12 17:14:00 2016 -0700

    commit message, this time with no warning

    Signed-off-by: Nishant Totla &amp;lt;nishanttotla@gmail.com&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Note that it&amp;rsquo;s also possible to &lt;a href=&#34;https://git-scm.com/book/en/v2/Git-Tools-Signing-Your-Work&#34;&gt;sign tags and merge commits&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;optional-upload-your-public-key-to-github:2956a9e0886a6b1ebeb547ba30f1e87b&#34;&gt;(Optional) Upload your Public Key to Github&lt;/h3&gt;

&lt;p&gt;Github &lt;a href=&#34;https://github.com/blog/2144-gpg-signature-verification&#34;&gt;recently announced&lt;/a&gt; that they would start showing a &amp;ldquo;Verified&amp;rdquo; tag on commits that were signed with a known GPG key. This requires uploading your public key to Github, so that it can verify signatures. You can do this in account settings&lt;/p&gt;

&lt;figure&gt;
    &lt;img data-action=&#34;zoom&#34; src=&#34;http://nishanttotla.com/images/keybase-io/settings-list.png&#34; style=&#34;width:20%; float: left&#34;&gt;&lt;/img&gt;
    &lt;img data-action=&#34;zoom&#34; src=&#34;http://nishanttotla.com/images/keybase-io/github-gpg-key-upload.png&#34; style=&#34;width:76%;&#34;&gt;&lt;/img&gt;
    &lt;figcaption&gt;This is the same public key that&#39;s on my Keybase profile.&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Github will now show a cool green tag against your signed commits!
&lt;figure&gt;
    &lt;img data-action=&#34;zoom&#34; src=&#34;http://nishanttotla.com/images/keybase-io/verified-commits.png&#34; style=&#34;width:90%;&#34;&gt;&lt;/img&gt;
    &lt;figcaption&gt;You can click on the tag to check the associated public key.&lt;/figcaption&gt;
&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;If you faced any issues with these instructions, I&amp;rsquo;d love to hear feedback!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Playing with Keybase.io</title>
      <link>http://nishanttotla.com/blog/playing-with-keybase-io/</link>
      <pubDate>Mon, 11 Apr 2016 10:10:15 -0700</pubDate>
      
      <guid>http://nishanttotla.com/blog/playing-with-keybase-io/</guid>
      <description>

&lt;p&gt;I have to admit, despite having spent so many years studying Computer Science, my understanding of security and modern best practices is pretty shabby. I&amp;rsquo;m fixing that now, and it was a perfect opportunity when a friend invited me to try &lt;a href=&#34;https://keybase.io/&#34;&gt;keybase.io&lt;/a&gt;. It&amp;rsquo;s still an Alpha product, and invite-only (or sign up and join the waitlist). I learned new things while trying it out, and wanted to write about it.&lt;/p&gt;

&lt;h3 id=&#34;a-primer-on-pgp-gpg-encryption:f04d57afc7abaa02bf8cb3c1249941a9&#34;&gt;A Primer on PGP/GPG encryption&lt;/h3&gt;

&lt;p&gt;Pretty Good Privacy (PGP) was a program created to encrypt/decrypt data back in 1991, and was later incorporated into a company that is now owned by Symantec. Later, an open standard called OpenPGP was created, which contained the formats for keys, encrypted messages, and message signatures defined by PGP. Thus, any other software that implemented the OpenPGP standard could interact with PGP. The GNU Privacy Guard (GPG) is one such implementation. It&amp;rsquo;s open source, part of the GNU project, and has become standard software, powering a huge chunk of encryption on the web.&lt;/p&gt;

&lt;p&gt;The way these work is that you first generate a public and private key using a program on your computer. As the names suggest, the private key is a secret, while the public key can be made available publicly. When someone wants to send a message, they encrypt it using your public key. This is equivalent to a mathematical operation that&amp;rsquo;s computationally very hard to reverse, unless you have the corresponding private key. On the other hand, you can use your private key to &amp;ldquo;sign&amp;rdquo; a message, which can only be decrypted using your public key. This is useful to prove that the message is indeed coming from you&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:f04d57afc7abaa02bf8cb3c1249941a9:1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:f04d57afc7abaa02bf8cb3c1249941a9:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;. This shows how you can send a verified (signed) and encrypted message to a friend that is secure and tamper-evident&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:f04d57afc7abaa02bf8cb3c1249941a9:2&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:f04d57afc7abaa02bf8cb3c1249941a9:2&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;h4 id=&#34;the-web-of-trust:f04d57afc7abaa02bf8cb3c1249941a9&#34;&gt;The Web of Trust&lt;/h4&gt;

&lt;p&gt;Some important questions now need to be asked of OpenPGP compatible systems &amp;ndash; how sure are you that the person who sent you an encrypted message actually holds the private key that signed it? Or how do you know that the public key you used to encrypt an important message doesn&amp;rsquo;t actually belong to an impostor? The point is that it&amp;rsquo;s not enough to have encryption, you also need to be able to trust ownership of keys.&lt;/p&gt;

&lt;p&gt;There are typically two ways to solve this problem - either using hierarchical Public Key Infrastructure (PKI), or the Web of Trust. The former relies on an implicitly trusted authority to certify public keys. If the authority certifies a user, then you can trust them. In the latter, individuals who own keys can vouch for each other. Suppose Alice trusts Bob, and wants to vouch for him, she can do so by signing his public key, thereby guaranteeing to everybody that Bob&amp;rsquo;s key indeed does belong to Bob. Of course, someone needs to vouch for Alice, and so on. What this does is that it creates a &amp;ldquo;web&amp;rdquo; of trust, with individuals certifying each other. Now if you&amp;rsquo;re wondering if you can trust Edward, you need to find someone who trusts someone who trusts someone &amp;hellip; eventually leading to Edward. The more such paths to Edward you can find, the better.&lt;/p&gt;

&lt;p&gt;This is an oversimplification, and there are many interesting technical details which I encourage you to read online. Additionally, PGP and GPG have had interesting histories, which are also worth reading.&lt;/p&gt;

&lt;h3 id=&#34;so-what-is-keybase:f04d57afc7abaa02bf8cb3c1249941a9&#34;&gt;So What is Keybase?&lt;/h3&gt;

&lt;p&gt;Keybase is a trusted database for public keys, where you can list your public encryption key, so that anyone wishing to send you an encrypted message can use it to do so. Even though public key encryption has been around for a while, it has usually been confined to security experts and enthusiasts, partly because most tools/clients have been notoriously &lt;a href=&#34;https://ariejan.net/2014/04/03/pretty-difficult-privacy/&#34;&gt;hard to use&lt;/a&gt;, and mainstream software hasn&amp;rsquo;t really integrated encryption as a first-class feature. Keybase is aiming to solve this problem by making it easy to generate and manage keys and devices, essentially bringing encryption to the masses.&lt;/p&gt;

&lt;figure&gt;
    &lt;img data-action=&#34;zoom&#34; src=&#34;http://nishanttotla.com/images/keybase-io/pgp-xkcd.png&#34; style=&#34;width:40%;&#34;&gt;&lt;/img&gt;
    &lt;figcaption&gt;&#34;If you want to be extra safe, check that there&#39;s a big block of jumbled characters at the bottom.&#34; (Source: &lt;a href=&#34;https://xkcd.com/1181/&#34;&gt;xkcd/1181&lt;/a&gt;, joking that even the existence of a signature likely means it&#39;s genuine.)&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Keybase also uses a different approach to establishing trust, using your accounts on public websites, instead of relying on a web of trust. If you trust that I control the &lt;a title=&#34;Twitter&#34; href=&#34;https://twitter.com/nishanttotla&#34;&gt;&lt;i class=&#34;icon-twitter&#34;&gt;&lt;/i&gt;/nishanttotla&lt;/a&gt;, &lt;a title=&#34;Github&#34; href=&#34;https://github.com/nishanttotla&#34;&gt;&lt;i class=&#34;icon-github-circled&#34;&gt;&lt;/i&gt;/nishanttotla&lt;/a&gt;, and &lt;a title=&#34;Hacker News&#34; href=&#34;https://news.ycombinator.com/user?id=nishanttotla&#34;&gt;&lt;i class=&#34;icon-hacker-news&#34;&gt;&lt;/i&gt;/nishanttotla&lt;/a&gt; accounts, then all of them saying that my public key is indeed mine gives you more confidence in my public key. It&amp;rsquo;s &lt;a href=&#34;http://greglturnquist.com/2014/10/what-keybase-is-and-is-not-and-why-im.html&#34;&gt;difficult&lt;/a&gt; to establish a web of trust, especially with people that you don&amp;rsquo;t meet face to face that often. But the more public accounts under my name can verify my public key, the more trustworthy it becomes. Besides who am I, if not the sum of my online presence? 😸&lt;/p&gt;

&lt;p&gt;Keybase now also allows you to manage multiple devices and them share keys, without actually having to move private keys around directly. Finally, the recently released &lt;a href=&#34;https://keybase.io/docs/kbfs&#34;&gt;Keybase File System&lt;/a&gt; allows you to create public, signed directories and securely share files.&lt;/p&gt;

&lt;h3 id=&#34;getting-started:f04d57afc7abaa02bf8cb3c1249941a9&#34;&gt;Getting Started&lt;/h3&gt;

&lt;p&gt;The signup process is straightforward, you create an account on the website. From that point, you can do all of the following operations using the website, the official Keybase command line client, or your own GPG setup. I chose the second one. Installing the client is easy using Homebrew.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ brew install keybase
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Once this is done, you can log in.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ keybase login
▶ INFO Saving /Users/NishantTotla/Library/LaunchAgents/homebrew.mxcl.keybase.plist
▶ INFO Starting homebrew.mxcl.keybase
How would you like to sign this install of Keybase?

(1) Use an existing device
(2) Use a paper key
(3) Use my Keybase passphrase
Choose a signing option: 3
Your keybase username or email address: nishanttotla
Please enter the Keybase passphrase for nishanttotla (12+ characters): *****
Enter a public name for this device: Nishant-MBP

===============================
IMPORTANT: PAPER KEY GENERATION
===============================

During Keybase&#39;s alpha, everyone gets a paper key. This is a private key.
  1. you must write it down
  2. the first two words are a public label
  3. it can be used to recover data
  4. it can provision new keys/devices, so put it in your wallet
  5. just like any other device, it&#39;ll be revokable/replaceable if you lose it

Your paper key is

  ****** ****** ****** ****** ******

Write it down....now!

Have you written down the above paper key? [y/N] y
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Really straightforward, and it also additionally generates a &amp;ldquo;paper key&amp;rdquo;, which can be used to authenticate and provision Keybase on other devices. Of course, once the phone app is released, there will be more ways of doing this.&lt;/p&gt;

&lt;p&gt;Keybase lets you generate your own PGP key as follows, although you can use a pre-existing key too.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ keybase pgp gen
Enter your real name, which will be publicly visible in your new key: Nishant Totla
Enter a public email address for your key: email1@email1.com
Enter another email address (or &amp;lt;enter&amp;gt; when done): email2@email2.com
Enter another email address (or &amp;lt;enter&amp;gt; when done):
Push an encrypted copy of your new secret key to the Keybase.io server? [Y/n] n
▶ INFO PGP User ID: Nishant Totla &amp;lt;email1@email1.com&amp;gt; [primary]
▶ INFO PGP User ID: &amp;lt;email2@email2.com&amp;gt;
▶ INFO Generating primary key (4096 bits)
▶ INFO Generating encryption subkey (4096 bits)
▶ INFO Generated new PGP key:
▶ INFO   user: Nishant Totla &amp;lt;nishanttotla@gmail.com&amp;gt;
▶ INFO   4096-bit RSA key, ID 7EA5781C9B3D0C19, created 2016-04-07
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Great! This created a public-private key pair that I can now use to send encrypted messages to people, or sign stuff. The final line above is the public key fingerprint, also listed on &lt;a href=&#34;https://keybase.io/nishanttotla&#34;&gt;my Keybase account&lt;/a&gt;. Notice that you have the option to upload an encrypted copy of your private key to the Keybase server&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:f04d57afc7abaa02bf8cb3c1249941a9:3&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:f04d57afc7abaa02bf8cb3c1249941a9:3&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;h3 id=&#34;adding-trust-using-public-accounts:f04d57afc7abaa02bf8cb3c1249941a9&#34;&gt;Adding Trust Using Public Accounts&lt;/h3&gt;

&lt;p&gt;So far, nobody has reason to trust the public key on my Keybase profile. Let&amp;rsquo;s use my Twitter account to remedy that.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ keybase prove twitter nishanttotla
Please publicly tweet the following, and don&#39;t delete it:

Verifying myself: I am nishanttotla on Keybase.io. MNlQinOzwmC6qk6SOsO9cifW549sLaBqfK9t / https://keybase.io/nishanttotla/sigs/MNlQinOzwmC6qk6SOsO9cifW549sLaBqfK9t
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Keybase generates a message signed with my private key, and asks me to tweet it. Now the Keybase server can confirm that the public key listed there matches the private key that generated the signed message on the tweet.
&lt;blockquote class=&#34;twitter-tweet tw-align-center&#34; data-lang=&#34;en&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Verifying myself: I am nishanttotla on Keybase.io. MNlQinOzwmC6qk6SOsO9cifW549sLaBqfK9t / &lt;a href=&#34;https://t.co/EkAZ8KA8si&#34;&gt;https://t.co/EkAZ8KA8si&lt;/a&gt;&lt;/p&gt;&amp;mdash; Nishant Totla (@nishanttotla) &lt;a href=&#34;https://twitter.com/nishanttotla/status/718322059617681408&#34;&gt;April 8, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
Once Keybase finds the tweet, success!&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Check Twitter now? [Y/n] Y
Couldn&#39;t find posted proof.
Check Twitter again now? [Y/n] Y
▶ NOTICE Success!
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Similar proofs are generated for &lt;a href=&#34;https://gist.github.com/nishanttotla/06b5ea86a3a7a5ba94e83136079118ba&#34;&gt;Github&lt;/a&gt;, &lt;a href=&#34;http://nishanttotla.com/keybase.txt&#34;&gt;personal website&lt;/a&gt;, etc. After all this, I&amp;rsquo;ve basically accomplished the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Generated a new PGP key pair, with the private key on my laptop&lt;/li&gt;
&lt;li&gt;Generated a paper key that I could use to authenticate the Keybase client on more devices&lt;/li&gt;
&lt;li&gt;Verified ownership of this key pair by posting to public websites&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All of these are connected as shown below&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:f04d57afc7abaa02bf8cb3c1249941a9:4&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:f04d57afc7abaa02bf8cb3c1249941a9:4&#34;&gt;4&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;figure&gt;
    &lt;img data-action=&#34;zoom&#34; src=&#34;http://nishanttotla.com/images/keybase-io/keybase-graph.png&#34; style=&#34;width:100%;&#34;&gt;&lt;/img&gt;
    &lt;figcaption&gt;Keybase constructs this Merkle tree for you, showing all your keys and claimed accounts. As more keys and devices are provisioned, the graph grows and becomes more complex. Notice that I added my second laptop (Nishant-Home-MBP) using my paper key (shove scrap).&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Now, I&amp;rsquo;m ready to send and receive verified encrypted messages! It&amp;rsquo;s possible to use the client to create encrypted messages for a Keybase user (or even a non-user if you have their public key). I&amp;rsquo;ll send a message to &lt;a href=&#34;https://keybase.io/riyazdf&#34;&gt;Riyaz&lt;/a&gt;, who originally invited me to the site.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ keybase pgp encrypt riyazdf -s -m &amp;quot;Hey thanks for inviting me to Keybase. Could you please proofread this blog post for me?&amp;quot;
▶ INFO Identifying recipient riyazdf
✔ &amp;lt;tracked&amp;gt; public key fingerprint: 64B4 0338 48C7 49D3 92B5 8F4A 3796 809B 8CD0 E0B5
You last tracked riyazdf on 2016-04-08 09:52:28 PDT
✔ &amp;lt;tracked&amp;gt; &amp;quot;riyazdf&amp;quot; on twitter: https://twitter.com/riyazdf/status/684440359720497153 [cached 2016-04-09 14:14:28 PDT]
✔ &amp;lt;tracked&amp;gt; &amp;quot;riyazdf&amp;quot; on github: https://gist.github.com/2a59aa8a5af53024d5c9 [cached 2016-04-09 14:14:29 PDT]
-----BEGIN PGP MESSAGE-----
Version: Keybase Go 1.0.14 (darwin)
Comment: https://keybase.io/download

wcFMAyIqLBxryJxlARAAvrr4O5aS5houev6Ii7x1vlUFuP2camt7cOI92mKmIsa3
5JitK0Q1leqP1lbAfP7rv1q+7LowG5YYArRteV1PI/XNyPEMHdmZGRLnRH15tm3A
+jmG1P0H4vW9HpJWg57J0ywV8DDJMObdtmvq3leZF9DI02b0xnBNnr90YzFI9SM/
yGOjzs0XaeZuDhzqud/e+oGh3A2xmlnv2qm21Y747hRc1e8OBjeVa9HuOK86lDEW
mNPpyGQ7l7ACpFl4o7qUW/++tVWrE51UtIlQHRavwEiLcC3aLA021lJ+5ep89uKN
ndmjn+X8Mj+o5lRMFSRLHNLJv58golmB2foqRma5an3A8MQ9wDPWCsxoKjRF6Gu8
co9tY7sULioGyu+I7NZlvyENivDyeJPfl9aahDebMz/3sQ3VjHeVsAgHbsdu5KtK
VLDZQVNSHE9iAVPr5sBz6PWA30CuRzhrLVynlMFoB2GArjUq771sd9yVrUqgKzZv
cmGxkc4C8KJECvjaNQM26xUAL/MBJl10Tryz/BKgV+b8zOZ/vO86lLA0XiW7bUOi
OEDGR1VOkbJXwnwFQpk4Su+6MiHRZujAThal5UtjHwuRgtQX98uX+om3Z04cylxT
AiqlPs7Z/sHF2+SpX0LpXFAXeIteiDBUDeQXlAU3ro4yY9v7vjPu2Yjuv+AhLWnB
wEwDjietV2deRDQBCAA2cJNe3vibZPxWEWC8j89wxrRmTnfJ8oe3FUcX5wQsEoO0
rO26WeJAlL5uh8gCkK5GrMydBTC/Iq2m1IMvuqFRmSZ/2fF6UGcHT6y9LBjMN+8s
G8tUhYWuC18RGdH9OERsDUTeQOFo5bpIrwo3gjN1Es+B/DE2e9TzBBuFFGY3hgvJ
uXjYKviF0RaCx+Kyunb1E7NrtaF6tK8X5TUAEgKwCpmaRnQaA3/O4y/Zc6iBJGtk
NKC0WztTOafsLJHG5SBYFKgljrEQpvXYUtvIfemSwyuUqx+S+A2q7Szd8f7j16YJ
MMJ4tm7D0uTLgek1Ru10v/EvqTT+il+XLTXsidUF0uAB5OYo7LQ3kMER1wzNHUbA
HNXh6HjhXofjt95doDaIyyDijnp0a+Dz4GTg4OGVcuAE4uAlbEXgW+bZu3p9LEPD
kENcfJCZz7SZTuVJoVhd04WB2HssyqqBYIz3gvHqeJyQC7Vdn2InfN5I6ZZzXuJY
PrCf8Wiy1pYF4Hzk5Knx3hCrbiGREy75jMm2MOBK4zkWtXc6l4J64CPhk4Lgx+Qo
0CnpJDUsZEZFHsWbCBQ/4gOr4FHhCMrhUpLhdQHhFuvp+YIW+ESeeuOJEPzcBWWe
GDMEuMOnDpdsgNhV7fIjC13PFAN4MISsYGGI0jzLfSyiEv40FtoAn1NHDCQoraiW
8rLa08Ju9nJTMXzle+Q02+ia9OWFGBRJ/5e2aV/WVtrvqiwDDUzy7FQtuFfYRvxU
0wd2ZwcybPg00shzDCWVo1kKEwN/qtf4i7JcpVRuArP0Bet9EH7Me83AvdSxjTSc
JdIgpYw4zXg2OR8SW11eQ4eu22M7sMBmesn6+TAVVwW2qGDPDu1dOZUaUB/RDmhn
oCUPoaSvHUejZM1+1Zc08WrhxZKIir/iahfF62zH7UbMqpQfVau7iAItqMSclIhh
fGUjdQkUiKVuZLlrkWUVUBj96aiTAXkS51xuhIce0xPL7/5GvaX8S7SVtxeDXCdL
M7uT2kN9ckDMQcL6W2K36Szl8eW3vVLQ0AycYJANtldbf1DehWvspQxHKkewfuAa
0VGJ9ZBKFDjH5tig5wCkMWuJayUSomsBDLrlT5tglAMV2v0q1Qx3+RIVrKsdEe3c
vYYixZexSOXKXVuHhpYEaKFHVjZbO1PcfyXZy8kuKAt+XImnzgq52dBlQBfSiXu0
NnLlHvuC6/MRA2CGEMAnj8Ks0/uQdio7uzOSBqBlNHf6CSFzTX+gx8KjE0bjPVD2
40ah/MJehkBxHCnolHPOGC3kKdRBPVb1f1gq2AkD/9RKj+L6FcLN4ZCAAA==
=pl6M
-----END PGP MESSAGE-----
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now I can send the message using any email client, and only Riyaz would be able to read it. I hear that soon, it&amp;rsquo;ll also be possible to use Keybase to send the message. Keybase automatically managed the retrieval of his public key, verified social proofs etc. If anything had changed since I last tracked him, I&amp;rsquo;d get a meaningful error message &amp;ndash; very simple and non-complicated! I know Riyaz on Twitter and Github, hence trust his public key. What&amp;rsquo;s even cooler is I could have used his Twitter handle to do the same (it&amp;rsquo;s the same as the Keybase handle in this case, but it could have been different), since it&amp;rsquo;s connected to the PGP key. So basically&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ keybase pgp encrypt riyazdf@twitter -s -m &amp;quot;Hey it&#39;s me again.&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This is really cool, because I&amp;rsquo;m essentially sending someone an encrypted message just using their Twitter handle!&lt;/p&gt;

&lt;h3 id=&#34;my-impression:f04d57afc7abaa02bf8cb3c1249941a9&#34;&gt;My Impression&lt;/h3&gt;

&lt;p&gt;The first thing that struck me about Keybase is great design. They&amp;rsquo;ve made the process of interacting with it extremely transparent and simple, which is brilliant for users who aren&amp;rsquo;t experts. The flexibility of being able to use a command line client is especially appreciated. For those who&amp;rsquo;d like to be even more careful, it&amp;rsquo;s possible to completely bypass the need for the client, and use command line scripts instead (which the website helps you construct). Note that you could also use the website for decryption and signing, if you chose to upload your private key.&lt;/p&gt;

&lt;p&gt;Security and encryption are difficult areas, and especially relevant in modern times. To make it available to everybody, Keybase have made tradeoffs between usability and security that are particularly neat. I suppose they will have to continue to strike that balance, and I&amp;rsquo;m really excited to see what they do in the future.&lt;/p&gt;

&lt;p&gt;People, especially those already used to encryption might complain that Keybase is not perfect &amp;ndash; and it isn&amp;rsquo;t. But using social proofs is a powerful idea, and besides, you can always use Keybase the old fashioned way.&lt;/p&gt;

&lt;h3 id=&#34;what-can-go-wrong:f04d57afc7abaa02bf8cb3c1249941a9&#34;&gt;What Can Go Wrong?&lt;/h3&gt;

&lt;p&gt;The fundamental idea is that you are signing proofs of your (public key) identity, and hosting them on other websites that &lt;strong&gt;you&lt;/strong&gt; own. But any of these websites (including Keybase) can be compromised, so how do you build security and trust on top of systems that are fundamentally &amp;ldquo;hackable&amp;rdquo;? The first of defense is that you just try to spread your identity across as many systems as possible, which makes it more robust overall.&lt;/p&gt;

&lt;h4 id=&#34;what-if-my-twitter-account-is-compromised:f04d57afc7abaa02bf8cb3c1249941a9&#34;&gt;What if my Twitter account is compromised?&lt;/h4&gt;

&lt;p&gt;It&amp;rsquo;s possible to revoke a social proof from the Keybase site, and everybody will be able to see that you did so. What happens if all your social accounts are compromised, and need to be revoked? Well then your public key just became less trustworthy, and you already have other equally big (if not bigger) problems.&lt;/p&gt;

&lt;h4 id=&#34;what-if-my-keybase-account-is-compromised:f04d57afc7abaa02bf8cb3c1249941a9&#34;&gt;What if my Keybase account is compromised?&lt;/h4&gt;

&lt;p&gt;You can delete the proofs on the other websites and desert the Keybase account, leaving the intruder with an untrustworthy public key. You should be able to generate new keys, create a new account, and establish identity again. If you uploaded your private key to Keybase, you might be in trouble (don&amp;rsquo;t do it!). This is especially important since the site doesn&amp;rsquo;t support 2-Factor Authentication yet (shocking huh?), and you don&amp;rsquo;t want your private keys protected only by a passphrase.&lt;/p&gt;

&lt;p&gt;The Keybase server could also be compromised leading to undesirable outcomes, but there&amp;rsquo;s a better discussion of that &lt;a href=&#34;https://keybase.io/docs/server_security&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id=&#34;online-security-is-still-your-responsibility:f04d57afc7abaa02bf8cb3c1249941a9&#34;&gt;Online security is still your responsibility&lt;/h4&gt;

&lt;p&gt;Keybase is a trusted store for your public keys, but won&amp;rsquo;t make your online presence any more secure. For instance, your password reset email address is likely a single point of failure. Whoever gets access to your email account can hypothetically reset all other accounts and take control, which really is a disaster.&lt;/p&gt;

&lt;h4 id=&#34;can-you-protect-your-private-keys:f04d57afc7abaa02bf8cb3c1249941a9&#34;&gt;Can you protect your private keys?&lt;/h4&gt;

&lt;p&gt;So far, everything has revolved around being able to protect your private key, but that&amp;rsquo;s another challenge in itself. Do other people use your laptop? Do you carelessly move your keys around? If your private key is compromised though, it&amp;rsquo;s still possible to generate a new pair and provide new social proofs, but all previously encrypted public messages continue to be at risk.&lt;/p&gt;

&lt;p&gt;Eventually for most users, it will come down to a tradeoff between convenience and strict security. Some will go old-school and not trust Keybase at all, others will trust fully and upload their private key too (don&amp;rsquo;t!). Several new questions will come up in time. In particular, I&amp;rsquo;m interested to see how the law catches up with encryption being free and accessible to everyone.&lt;/p&gt;

&lt;p&gt;In conclusion, I will say that I&amp;rsquo;m expecting good things from Keybase and will closely follow the company&amp;rsquo;s progress. It&amp;rsquo;s almost surprising that nobody implemented this idea sooner, although many good ideas appear that way in hindsight. Whether Keybase can stand the test of time, we shall see.&lt;/p&gt;

&lt;h3 id=&#34;some-relevant-links:f04d57afc7abaa02bf8cb3c1249941a9&#34;&gt;Some Relevant Links&lt;/h3&gt;

&lt;p&gt;I&amp;rsquo;ve deliberately left out a lot of details from this post to make it more accessible. If you&amp;rsquo;d like to read further, here&amp;rsquo;s a set of links I pulled up (not exhaustive):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://askubuntu.com/questions/186805/difference-between-pgp-and-gpg&#34;&gt;Difference between PGP and GPG&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc4880&#34;&gt;RFC 4880 (OpenPGP Message Format)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://keybase.io/docs/server_security&#34;&gt;Keybase Server Security&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://keybase.io/blog/keybase-new-key-model&#34;&gt;Keybase&amp;rsquo;s New Key Model&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/keybase/client&#34;&gt;Keybase command line client (on Github)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Web_of_trust&#34;&gt;Web of Trust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.quora.com/What-is-Keybase-in-laymans-terms&#34;&gt;What is Keybase in layman terms&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linux.com/learn/pgp-web-trust-core-concepts-behind-trusted-communication&#34;&gt;PGP Web of Trust: Core Concepts Behind Trusted Communication&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://security.stackexchange.com/questions/9957/can-i-use-a-private-key-as-a-public-key-and-vice-versa&#34;&gt;Can I use a private key as a public key and vice versa?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://anarc.at/blog/2016-03-10-keybase/&#34;&gt;Problems with Keybase&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://saltpack.org/pgp-message-format-problems&#34;&gt;PGP message format problems&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Please feel free to suggest more links, or updates to the post! Also thanks to Riyaz for proofreading!&lt;/p&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:f04d57afc7abaa02bf8cb3c1249941a9:1&#34;&gt;This is what is known as asymmetric-key encryption, because there are two different keys that have different roles. There&amp;rsquo;s also symmetric-key encryption, where both parties share one (secret) key, and the same key is used to encrypt and decrypt messages. Symmetric-key encryption is generally faster, but the challenge is sharing the key securely.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:f04d57afc7abaa02bf8cb3c1249941a9:1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:f04d57afc7abaa02bf8cb3c1249941a9:2&#34;&gt;Tamper-evident means that if the message was tampered with along the way, it would be clear because it wouldn&amp;rsquo;t be possible to decrypt it using the matching public or private key.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:f04d57afc7abaa02bf8cb3c1249941a9:2&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:f04d57afc7abaa02bf8cb3c1249941a9:3&#34;&gt;Don&amp;rsquo;t do it! There are several concerns, implications, and reasons around why one may want to do it (or not). &lt;a href=&#34;https://github.com/keybase/keybase-issues/issues/160&#34;&gt;This thread&lt;/a&gt; might be helpful.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:f04d57afc7abaa02bf8cb3c1249941a9:3&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:f04d57afc7abaa02bf8cb3c1249941a9:4&#34;&gt;This graph, called a Merkle tree or hash tree is a tree in which every non-leaf node is labelled with the hash of the labels or values (in case of leaves) of its child nodes. Hash trees are useful because they allow efficient and secure verification of the contents of large data structures. The Keybase graph has bidirectional edges though, so it implements such checking in both directions.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:f04d57afc7abaa02bf8cb3c1249941a9:4&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Why I Moved to a Static Website</title>
      <link>http://nishanttotla.com/blog/why-i-moved-to-static-website/</link>
      <pubDate>Mon, 14 Mar 2016 00:52:35 -0700</pubDate>
      
      <guid>http://nishanttotla.com/blog/why-i-moved-to-static-website/</guid>
      <description>

&lt;p&gt;As some of you know, I&amp;rsquo;ve maintained a personal website/blog for a few years now. I&amp;rsquo;ve always liked writing, because I consider it to be a natural extension of thinking. While I&amp;rsquo;m not great with words, I do love keeping track of things I learn &amp;ndash; that&amp;rsquo;s really what a blog means to me. Over time, I went through several iterations to find the right platform. Things always revolved around WordPress, and regardless of what I tried, the experience of writing never got much better. What&amp;rsquo;s more, there was actually a huge overhead to log into WordPress, not get turned off by the painfully slow interface, and then finally type a post &amp;ndash; only to require a new plugin for each added functionality, which made the website progressively slower. I tried optimizing using several tricks, but at the end of the day I hated it.&lt;/p&gt;

&lt;h3 id=&#34;static-site-generators:57a527704b389062d91c7b9be304d601&#34;&gt;Static Site Generators&lt;/h3&gt;

&lt;p&gt;I was familiar with static site generators &amp;ndash; tools that generate your website for you using some basic definitions, but never thought they could work for me. Around two months ago, I started exploring further, and found that the ecosystem had &lt;a href=&#34;https://www.staticgen.com/&#34;&gt;grown a lot&lt;/a&gt; since I last checked. Still, it seemed like a lot of work with unclear advantages, until &lt;a href=&#34;https://twitter.com/prakharsriv9&#34;&gt;Prakhar&lt;/a&gt; fully convinced me to take the plunge.&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet tw-align-center&#34; data-lang=&#34;en&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;&lt;a href=&#34;https://twitter.com/nishanttotla&#34;&gt;@nishanttotla&lt;/a&gt; I whole-heartedly support this! No DB, editing in your fav text-editor and painless + free deployments. It can&amp;#39;t get better.&lt;/p&gt;&amp;mdash; Prakhar Srivastav (@prakharsriv9) &lt;a href=&#34;https://twitter.com/prakharsriv9/status/697481406956572672&#34;&gt;February 10, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;The end result is this website, served using the static site generator &lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt;, and hosted on Github&amp;rsquo;s servers using Github pages. I built it on top of the hard work already done by Prakhar, and I&amp;rsquo;m thankful to him for licensing his work generously. My repo is available on &lt;a href=&#34;https://github.com/nishanttotla/hugo-blog-skeleton&#34; title=&#34;Source code&#34;&gt;Github&lt;i class=&#34;icon-github-circled&#34;&gt;&lt;/i&gt;&lt;/a&gt;, and I appreciate contributions (issues/comments/PRs/anything else). Here&amp;rsquo;s what I&amp;rsquo;ve learned so far, and comparisons with WordPress + &lt;a href=&#34;https://www.bluehost.com/&#34;&gt;BlueHost&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;advantages-of-a-static-site:57a527704b389062d91c7b9be304d601&#34;&gt;Advantages of a Static Site&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Speed&lt;/strong&gt; - Static HTML can be loaded really fast, and is easy to cache. By comparison, WordPress uses a database to serve content that adds latency, and caching is much more complex. Faster websites are also more likely to have &lt;a href=&#34;https://webmasters.googleblog.com/2010/04/using-site-speed-in-web-search-ranking.html&#34;&gt;better search ranking&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Security&lt;/strong&gt; - WordPress has been known to have several security vulnerabilities, and generally has a wider attack surface since it needs a database and server to work. I&amp;rsquo;m no security expert, and always worried about exposing my site to attacks. BlueHost in addition constantly sent me emails about security updates, many of which I didn&amp;rsquo;t fully understand or want to care about. By contrast, a static site can be hosted practically anywhere (which for me means more secure locations like Github pages or AWS).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Cost&lt;/strong&gt; - A HUGE difference! A BlueHost web hosting account cost me about $50 per year, in addition to ~$10 for the domain name. Now I just pay for the domain, while web hosting is free with Github pages.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Portability&lt;/strong&gt; - Static HTML can be hosted literally anywhere with minimal to no setup. This makes it easy to not get locked into to a specific hosting provider or environment, and move quickly if necessary. Granted that WordPress also provides portability, but it&amp;rsquo;s not equally easy to set up everywhere.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Development Experience&lt;/strong&gt; - Damn good! To be honest, BlueHost run their business like a bank, with a clunky website and poor support, and a file manager straight out of the 90s. To run WordPress on top of that is a nightmare. Now, all my content is neatly versioned using Git and safe from corruption. I can write blog posts in markdown syntax on my favorite text editor (including offline), making it that much easier to write them (this was the biggest draw for me). It&amp;rsquo;s also easier for other people to contribute to my blog now.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;why-i-chose-hugo:57a527704b389062d91c7b9be304d601&#34;&gt;Why I chose Hugo&lt;/h3&gt;

&lt;p&gt;There are many static site generators out there, including some really popular ones like &lt;a href=&#34;https://jekyllrb.com/&#34;&gt;Jekyll&lt;/a&gt;, &lt;a href=&#34;http://octopress.org/&#34;&gt;Octopress&lt;/a&gt;, etc. Hugo is relatively new, with a smaller ecosystem, but has several things going for it.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It&amp;rsquo;s very easy to install &amp;ndash; just download a single binary and you&amp;rsquo;re ready to go! As a result, Hugo is easier to update too. By comparison, I couldn&amp;rsquo;t get Jekyll to build cleanly at all, and wouldn&amp;rsquo;t want a Ruby mess on my computer.&lt;/li&gt;
&lt;li&gt;Hugo is fast. It generates content much faster and provides live feedback while editing posts locally. While I didn&amp;rsquo;t realize speed was a big deal initially, I can&amp;rsquo;t imagine how frustrating it would be if each change I made took several seconds (or more) to render.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Given that Hugo is relatively new, it might take more work to get what you want. It also lacks a plugin system. But none of these were problems for me, and overall I&amp;rsquo;ve been very happy with my decision.&lt;/p&gt;

&lt;h3 id=&#34;static-sites-may-not-be-for-everyone:57a527704b389062d91c7b9be304d601&#34;&gt;Static Sites may not be for Everyone&lt;/h3&gt;

&lt;p&gt;All that said, if this got you excited, and you want to build your own static site, there are a few caveats to consider.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Creating a good static site is likely to be more work, and takes a certain amount of comfort with web design. You also need to set up your own workflow which might be hard if you&amp;rsquo;re unfamiliar with programming tools.&lt;/li&gt;
&lt;li&gt;Static websites won&amp;rsquo;t offer full dynamic functionality the way a WordPress site can, so you need to think about what you really need.&lt;/li&gt;
&lt;li&gt;The overall writing experience might not appeal to you after all, if you prefer using WYSIWYG editors and writing tools (although considering the power of static site generators and modern text editors, I&amp;rsquo;m not unhappy).&lt;/li&gt;
&lt;li&gt;It can be difficult to use other devices to write posts, depending on how complex it is to set up the development environment. Hugo makes it easy, but there can still be challenges with versioning, or when extra tools are needed. At the very least, editing on the phone will be difficult (unlike WordPress).&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;in-conclusion:57a527704b389062d91c7b9be304d601&#34;&gt;In Conclusion&lt;/h3&gt;

&lt;p&gt;I don&amp;rsquo;t have much more to say, except that to write a blog post now, all I need to do is type&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ hugo new blog/post-slug.md
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;in my terminal, and I&amp;rsquo;m ready to start editing! It&amp;rsquo;s great for taking notes, quickly recording ideas, and eventually sharing them as blog posts, which only takes a simple &lt;code&gt;git push&lt;/code&gt;. This for me is the biggest win!&lt;/p&gt;

&lt;p&gt;Please feel free to report any issues in the comments, or on &lt;a href=&#34;https://github.com/nishanttotla/hugo-blog-skeleton&#34;&gt;Github&lt;/a&gt;. I&amp;rsquo;m happy to help if you want to set up your own static site. It&amp;rsquo;s a lot of fun! 😸&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Building Code Inside a VM</title>
      <link>http://nishanttotla.com/blog/building-code-inside-vm/</link>
      <pubDate>Fri, 11 Mar 2016 13:35:12 -0800</pubDate>
      
      <guid>http://nishanttotla.com/blog/building-code-inside-vm/</guid>
      <description>

&lt;p&gt;This post is based on the workflow I&amp;rsquo;ve been employing during my day to day work at Docker. When I first started, I chose to get a 13&amp;rsquo; Macbook Pro, which is a pretty solid machine to own. But a lot of the compiling and testing I needed to do needed a Linux distribution, so I had two options &amp;ndash; install Linux or use a Virtual Machine (VM). Installing VirtualBox and using a simple Ubuntu VM is a fairly straightforward solution, but there were two problems&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;I really wanted to continue writing code on OSX (personal preference)&lt;/li&gt;
&lt;li&gt;I don&amp;rsquo;t think VirtualBox is very stable, and it would be a disaster to lose my work if something bad happened&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The solution was the continue writing code on the Mac, but build it inside the VM &amp;ndash; a win-win. But how?&lt;/p&gt;

&lt;p&gt;The first solution I came up with involved using &lt;code&gt;rsync&lt;/code&gt;, a very popular file synchronization tool for Unix-like systems. I set up one folder called &lt;code&gt;work&lt;/code&gt; on my Mac, and one on the VM, and used &lt;code&gt;rsync&lt;/code&gt; to copy files from one to the other. Any changes were automatically detected using &lt;code&gt;inotify&lt;/code&gt; (or similar tools), and triggered a sync. I won&amp;rsquo;t describe that in detail because it&amp;rsquo;s not only fragile and prone to corruption&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:0845bcb07a42949b6056d62ad8760900:1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:0845bcb07a42949b6056d62ad8760900:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;, but also too hard to set up&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:0845bcb07a42949b6056d62ad8760900:2&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:0845bcb07a42949b6056d62ad8760900:2&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;. All this was before I discovered that I could mount folders (duh) and create a relatively stable solution. If this is something you&amp;rsquo;re interested in too, read on!&lt;/p&gt;

&lt;h3 id=&#34;setting-up-a-mounted-folder-on-a-virtualbox-vm:0845bcb07a42949b6056d62ad8760900&#34;&gt;Setting up a mounted folder on a VirtualBox VM&lt;/h3&gt;

&lt;p&gt;It&amp;rsquo;s relatively easy to create a VM using your Linux distribution of choice. I use Ubuntu 14.04 right now, but the setup should work in most cases. Once you&amp;rsquo;ve installed the VM, make sure you install &lt;code&gt;openssh-server&lt;/code&gt; to be able to SSH into it from the host&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:0845bcb07a42949b6056d62ad8760900:3&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:0845bcb07a42949b6056d62ad8760900:3&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo apt-get install openssh-server
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The other requirement is Guest Additions, without which mounting won&amp;rsquo;t work. It&amp;rsquo;s straightforward to install, and &lt;a href=&#34;http://askubuntu.com/questions/22743/how-do-i-install-guest-additions-in-a-virtualbox-vm&#34;&gt;several articles&lt;/a&gt; online explain how to do it.&lt;/p&gt;

&lt;p&gt;Now we need to create a mounted folder. Right click on the VM and go to Settings, under Shared Folders. There, mount your folder of choice as a Machine Folder, and give it a name. I mount the &lt;code&gt;work&lt;/code&gt; folder in my home directory, and call the mount &lt;code&gt;workmac&lt;/code&gt; (any name is fine).&lt;/p&gt;

&lt;figure&gt;
    &lt;img data-action=&#34;zoom&#34; src=&#34;http://nishanttotla.com/images/vbox-shared-folder.png&#34; style=&#34;width:100%;&#34;&gt;&lt;/img&gt;
&lt;/figure&gt;

&lt;p&gt;Finally, SSH into the VM, then create a folder, which will be the mount point for the host folder. In my case, it&amp;rsquo;s in the home directory  and called &lt;code&gt;work-vm&lt;/code&gt;. The shared folder is mounted with 770 permissions with &lt;code&gt;root&lt;/code&gt; user and &lt;code&gt;vboxsf&lt;/code&gt; as the group. This is an inconvenience since you (the user) also want to have those permissions. This is done by adding the user to to &lt;code&gt;vboxsf&lt;/code&gt; group as follows&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo usermod -aG vboxsf $(whoami)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Finally, mount the folder&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo mount -t vboxsf -o uid=$UID,gid=$(id -g) workmac work-vm
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Change the mount and directory names as appropriate for you. And that&amp;rsquo;s it! Now you should be able to access a mirror of the host folder inside the VM without any of the messy &lt;code&gt;rsync&lt;/code&gt; scripts. Note that if you reboot the VM, you&amp;rsquo;ll have to run the mount command again &amp;ndash; a requirement you can surpass by adding the line to your &lt;code&gt;.bashrc&lt;/code&gt; file.&lt;/p&gt;

&lt;h3 id=&#34;advantages-of-this-setup:0845bcb07a42949b6056d62ad8760900&#34;&gt;Advantages of this setup&lt;/h3&gt;

&lt;p&gt;It&amp;rsquo;s an extremely simple setup that has worked for me (and others I helped) each time. While for me, the reasons to do this centered around personal preference, I feel there are at least two good reasons to do it anyway&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The environment inside a VM can be precisely controlled, and doesn&amp;rsquo;t have to depend on, or mess with the host (Mac). It&amp;rsquo;s really easy to upgrade, or redo if things are failing. This also makes it easy to quickly experiment with different build environments.&lt;/li&gt;
&lt;li&gt;The setup is easier to reproduce and share with someone else.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So far, my use cases haven&amp;rsquo;t presented any disadvantages, though I suspect there could be situations where this couldn&amp;rsquo;t work. Feel free to share your experiences in the comments. The next step I&amp;rsquo;d like to explore would be to create a similar dev environment &lt;a href=&#34;http://www.ybrikman.com/writing/2015/05/19/docker-osx-dev/&#34;&gt;using Docker&lt;/a&gt; instead.&lt;/p&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:0845bcb07a42949b6056d62ad8760900:1&#34;&gt;You don&amp;rsquo;t want to know how git config files can go crazy.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:0845bcb07a42949b6056d62ad8760900:1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:0845bcb07a42949b6056d62ad8760900:2&#34;&gt;I&amp;rsquo;m surprised I even had to patience to go through all the steps.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:0845bcb07a42949b6056d62ad8760900:2&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:0845bcb07a42949b6056d62ad8760900:3&#34;&gt;To save some trouble if your Mac reboots, you might want to set a static IP address for the VM. How to do that is beyond the scope of this post.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:0845bcb07a42949b6056d62ad8760900:3&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Distributed Systems Resources</title>
      <link>http://nishanttotla.com/blog/distributed-systems-resources/</link>
      <pubDate>Sat, 02 Jan 2016 16:25:04 -0800</pubDate>
      
      <guid>http://nishanttotla.com/blog/distributed-systems-resources/</guid>
      <description>

&lt;p&gt;I started working on distributed systems in early 2016. Given that I had little to no background, I started trying to cover as much as possible from the literature out there.&lt;/p&gt;

&lt;p&gt;In this (dynamically updated) post, I intend to keep track of all good resources I come across in this quest. This includes not only research papers and books, but also good blogs, people to follow and discussions/meetups that could be helpful. It’s overwhelming to begin with, but everything that’s worthwhile has to start somewhere! This is obviously not a complete list, but hopefully the union of content within all entries on the list will be complete.&lt;/p&gt;

&lt;h3 id=&#34;blogs:dc4816fae14320f2f4f74f4d0f551d32&#34;&gt;Blogs&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;http://the-paper-trail.org/&#34;&gt;The Paper Trail&lt;/a&gt; by &lt;a href=&#34;https://twitter.com/HenryR&#34;&gt;Henry Robinson&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://aphyr.com/posts&#34;&gt;Aphyr&lt;/a&gt; by &lt;a href=&#34;https://twitter.com/aphyr&#34;&gt;Kyle Kingsbury&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;books:dc4816fae14320f2f4f74f4d0f551d32&#34;&gt;Books&lt;/h3&gt;

&lt;h3 id=&#34;research-papers:dc4816fae14320f2f4f74f4d0f551d32&#34;&gt;Research Papers&lt;/h3&gt;

&lt;h3 id=&#34;people:dc4816fae14320f2f4f74f4d0f551d32&#34;&gt;People&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://twitter.com/HenryR&#34;&gt;Henry Robinson&lt;/a&gt;, Cloudera&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://twitter.com/pbailis&#34;&gt;Peter Bailis&lt;/a&gt;, Stanford University&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://twitter.com/aphyr&#34;&gt;Kyle Kingsbury&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;misc:dc4816fae14320f2f4f74f4d0f551d32&#34;&gt;Misc&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Papers We Love [&lt;a href=&#34;https://twitter.com/papers_we_love&#34;&gt;Twitter&lt;/a&gt;] [&lt;a href=&#34;http://www.meetup.com/papers-we-love-too/&#34;&gt;San Francisco&lt;/a&gt;] is a cool meetup that discusses research papers, with chapters around the world.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;want-to-contribute-to-this-post:dc4816fae14320f2f4f74f4d0f551d32&#34;&gt;Want to Contribute to this post?&lt;/h3&gt;

&lt;p&gt;Please feel free to make suggestions or &lt;a href=&#34;https://github.com/nishanttotla/hugo-blog-skeleton/blob/master/content/articles/distributed-systems-resources.md&#34;&gt;submit a PR&lt;/a&gt;!&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>