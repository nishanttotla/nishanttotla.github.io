<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Technical on nRT</title>
    <link>http://nishanttotla.com/categories/technical/</link>
    <description>Recent content in Technical on nRT</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 14 Mar 2016 00:52:35 -0700</lastBuildDate>
    <atom:link href="http://nishanttotla.com/categories/technical/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Why I Moved to a Static Website</title>
      <link>http://nishanttotla.com/articles/why-i-moved-to-static-website/</link>
      <pubDate>Mon, 14 Mar 2016 00:52:35 -0700</pubDate>
      
      <guid>http://nishanttotla.com/articles/why-i-moved-to-static-website/</guid>
      <description>

&lt;p&gt;As some of you know, I&amp;rsquo;ve maintained a personal website/blog for a few years now. I&amp;rsquo;ve always liked writing, because I consider it to be a natural extension of thinking. While I&amp;rsquo;m not great with words, I do love keeping track of things I learn &amp;ndash; that&amp;rsquo;s really what a blog means to me. Over time, I went through several iterations to find the right platform. Things always revolved around WordPress, and regardless of what I tried, the experience of writing never got much better. What&amp;rsquo;s more, there was actually a huge overhead to log into WordPress, not get turned off by the painfully slow interface, and then finally type a post &amp;ndash; only to require a new plugin for each added functionality, which made the website progressively slower. I tried optimizing using several tricks, but at the end of the day I hated it.&lt;/p&gt;

&lt;h3 id=&#34;static-site-generators:57a527704b389062d91c7b9be304d601&#34;&gt;Static Site Generators&lt;/h3&gt;

&lt;p&gt;I was familiar with static site generators &amp;ndash; tools that generate your website for you using some basic definitions, but never thought they could work for me. Around two months ago, I started exploring further, and found that the ecosystem had &lt;a href=&#34;https://www.staticgen.com/&#34;&gt;grown a lot&lt;/a&gt; since I last checked. Still, it seemed like a lot of work with unclear advantages, until &lt;a href=&#34;https://twitter.com/prakharsriv9&#34;&gt;Prakhar&lt;/a&gt; fully convinced me to take the plunge.&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet tw-align-center&#34; data-lang=&#34;en&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;&lt;a href=&#34;https://twitter.com/nishanttotla&#34;&gt;@nishanttotla&lt;/a&gt; I whole-heartedly support this! No DB, editing in your fav text-editor and painless + free deployments. It can&amp;#39;t get better.&lt;/p&gt;&amp;mdash; Prakhar Srivastav (@prakharsriv9) &lt;a href=&#34;https://twitter.com/prakharsriv9/status/697481406956572672&#34;&gt;February 10, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;The end result is this website, served using the static site generator &lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt;, and hosted on Github&amp;rsquo;s servers using Github pages. I built it on top of the hard work already done by Prakhar, and I&amp;rsquo;m thankful to him for licensing his work generously. My repo is available on &lt;a href=&#34;https://github.com/nishanttotla/hugo-blog-skeleton&#34; title=&#34;Source code&#34;&gt;Github&lt;i class=&#34;icon-github-circled&#34;&gt;&lt;/i&gt;&lt;/a&gt;, and I appreciate contributions (issues/comments/PRs/anything else). Here&amp;rsquo;s what I&amp;rsquo;ve learned so far, and comparisons with WordPress + &lt;a href=&#34;https://www.bluehost.com/&#34;&gt;BlueHost&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;advantages-of-a-static-site:57a527704b389062d91c7b9be304d601&#34;&gt;Advantages of a Static Site&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Speed&lt;/strong&gt; - Static HTML can be loaded really fast, and is easy to cache. By comparison, WordPress uses a database to serve content that adds latency, and caching is much more complex. Faster websites are also more likely to have &lt;a href=&#34;https://webmasters.googleblog.com/2010/04/using-site-speed-in-web-search-ranking.html&#34;&gt;better search ranking&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Security&lt;/strong&gt; - WordPress has been known to have several security vulnerabilities, and generally has a wider attack surface since it needs a database and server to work. I&amp;rsquo;m no security expert, and always worried about exposing my site to attacks. BlueHost in addition constantly sent me emails about security updates, many of which I didn&amp;rsquo;t fully understand or want to care about. By contrast, a static site can be hosted practically anywhere (which for me means more secure locations like Github pages or AWS).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Cost&lt;/strong&gt; - A HUGE difference! A BlueHost web hosting account cost me about $50 per year, in addition to ~$10 for the domain name. Now I just pay for the domain, while web hosting is free with Github pages.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Development Experience&lt;/strong&gt; - Damn good! To be honest, BlueHost run their business like a bank, with a clunky website and poor support, and a file manager straight out of the 90s. To run WordPress on top of that is a nightmare. Now, all my content is neatly versioned using Git and safe from corruption. I can write blog posts in markdown syntax on my favorite text editor (including offline), making it that much easier to write them (this was the biggest draw for me). It&amp;rsquo;s also easier for other people to contribute to my blog now.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;why-i-chose-hugo:57a527704b389062d91c7b9be304d601&#34;&gt;Why I chose Hugo&lt;/h3&gt;

&lt;p&gt;There are many static site generators out there, including some really popular ones like &lt;a href=&#34;https://jekyllrb.com/&#34;&gt;Jekyll&lt;/a&gt;, &lt;a href=&#34;http://octopress.org/&#34;&gt;Octopress&lt;/a&gt;, etc. Hugo is relatively new, with a smaller ecosystem, but has several things going for it.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It&amp;rsquo;s very easy to install &amp;ndash; just download a single binary and you&amp;rsquo;re ready to go! As a result, Hugo is easier to update too. By comparison, I couldn&amp;rsquo;t get Jekyll to build cleanly at all, and wouldn&amp;rsquo;t want a Ruby mess on my computer.&lt;/li&gt;
&lt;li&gt;Hugo is fast. It generates content much faster and provides live feedback while editing posts locally. While I didn&amp;rsquo;t realize speed was a big deal initially, I can&amp;rsquo;t imagine how frustrating it would be if each change I made took several seconds (or more) to render.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Given that Hugo is relatively new, it might take more work to get what you want. It also lacks a plugin system. But none of these were problems for me, and overall I&amp;rsquo;ve been very happy with my decision.&lt;/p&gt;

&lt;h3 id=&#34;static-sites-may-not-be-for-everyone:57a527704b389062d91c7b9be304d601&#34;&gt;Static Sites may not be for Everyone&lt;/h3&gt;

&lt;p&gt;All that said, if this got you excited, and you want to build your own static site, there are a few caveats to consider.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Creating a good static site is likely to be more work, and takes a certain amount of comfort with web design. You also need to set up your own workflow which might be hard if you&amp;rsquo;re unfamiliar with programming tools.&lt;/li&gt;
&lt;li&gt;Static websites won&amp;rsquo;t offer full dynamic functionality the way a WordPress site can, so you need to think about what you really need.&lt;/li&gt;
&lt;li&gt;The overall writing experience might not appeal to you after all, if you prefer using WYSIWYG editors and writing tools (although considering the power of static site generators and modern text editors, I&amp;rsquo;m not unhappy).&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;in-conclusion:57a527704b389062d91c7b9be304d601&#34;&gt;In Conclusion&lt;/h3&gt;

&lt;p&gt;I don&amp;rsquo;t have much more to say, except that to write a blog post now, all I need to do is type&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ hugo new blog/post-slug.md
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;in my terminal, and I&amp;rsquo;m ready to start editing! It&amp;rsquo;s great for taking notes, quickly recording ideas, and eventually sharing them as blog posts, which only takes a simple &lt;code&gt;git push&lt;/code&gt;. This for me is the biggest win!&lt;/p&gt;

&lt;p&gt;Please feel free to report any issues in the comments, or on &lt;a href=&#34;https://github.com/nishanttotla/hugo-blog-skeleton&#34;&gt;Github&lt;/a&gt;. I&amp;rsquo;m happy to help if you want to set up your own static site. It&amp;rsquo;s a lot of fun! ðŸ˜¸&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Building Code Inside a VM</title>
      <link>http://nishanttotla.com/articles/building-code-inside-vm/</link>
      <pubDate>Fri, 11 Mar 2016 13:35:12 -0800</pubDate>
      
      <guid>http://nishanttotla.com/articles/building-code-inside-vm/</guid>
      <description>

&lt;p&gt;This post is based on the workflow I&amp;rsquo;ve been employing during my day to day work at Docker. When I first started, I chose to get a 13&amp;rsquo; Macbook Pro, which is a pretty solid machine to own. But a lot of the compiling and testing I needed to do needed a Linux distribution, so I had two options &amp;ndash; install Linux or use a Virtual Machine (VM). Installing VirtualBox and using a simple Ubuntu VM is a fairly straightforward solution, but there were two problems&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;I really wanted to continue writing code on OSX (personal preference)&lt;/li&gt;
&lt;li&gt;I don&amp;rsquo;t think VirtualBox is very stable, and it would be a disaster to lose my work if something bad happened&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The solution was the continue writing code on the Mac, but build it inside the VM &amp;ndash; a win-win. But how?&lt;/p&gt;

&lt;p&gt;The first solution I came up with involved using &lt;code&gt;rsync&lt;/code&gt;, a very popular file synchronization tool for Unix-like systems. I set up one folder called &lt;code&gt;work&lt;/code&gt; on my Mac, and one on the VM, and used &lt;code&gt;rsync&lt;/code&gt; to copy files from one to the other. Any changes were automatically detected using &lt;code&gt;inotify&lt;/code&gt; (or similar tools), and triggered a sync. I won&amp;rsquo;t describe that in detail because it&amp;rsquo;s not only fragile and prone to corruption&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:0845bcb07a42949b6056d62ad8760900:1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:0845bcb07a42949b6056d62ad8760900:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;, but also too hard to set up&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:0845bcb07a42949b6056d62ad8760900:2&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:0845bcb07a42949b6056d62ad8760900:2&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;. All this was before I discovered that I could mount folders (duh) and create a relatively stable solution. If this is something you&amp;rsquo;re interested in too, read on!&lt;/p&gt;

&lt;h3 id=&#34;setting-up-a-mounted-folder-on-a-virtualbox-vm:0845bcb07a42949b6056d62ad8760900&#34;&gt;Setting up a mounted folder on a VirtualBox VM&lt;/h3&gt;

&lt;p&gt;It&amp;rsquo;s relatively easy to create a VM using your Linux distribution of choice. I use Ubuntu 14.04 right now, but the setup should work in most cases. Once you&amp;rsquo;ve installed the VM, make sure you install &lt;code&gt;openssh-server&lt;/code&gt; to be able to SSH into it from the host&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:0845bcb07a42949b6056d62ad8760900:3&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:0845bcb07a42949b6056d62ad8760900:3&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo apt-get install openssh-server
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The other requirement is Guest Additions, without which mounting won&amp;rsquo;t work. It&amp;rsquo;s straightforward to install, and &lt;a href=&#34;http://askubuntu.com/questions/22743/how-do-i-install-guest-additions-in-a-virtualbox-vm&#34;&gt;several articles&lt;/a&gt; online explain how to do it.&lt;/p&gt;

&lt;p&gt;Now we need to create a mounted folder. Right click on the VM and go to Settings, under Shared Folders. There, mount your folder of choice as a Machine Folder, and give it a name. I mount the &lt;code&gt;work&lt;/code&gt; folder in my home directory, and call the mount &lt;code&gt;workmac&lt;/code&gt; (any name is fine).&lt;/p&gt;

&lt;figure&gt;
    &lt;img data-action=&#34;zoom&#34; src=&#34;http://nishanttotla.com/images/vbox-shared-folder.png&#34; style=&#34;width:100%;&#34;&gt;&lt;/img&gt;
&lt;/figure&gt;

&lt;p&gt;Finally, SSH into the VM, then create a folder, which will be the mount point for the host folder. In my case, it&amp;rsquo;s in the home directory  and called &lt;code&gt;work-vm&lt;/code&gt;. The shared folder is mounted with 770 permissions with &lt;code&gt;root&lt;/code&gt; user and &lt;code&gt;vboxsf&lt;/code&gt; as the group. This is an inconvenience since you (the user) also want to have those permissions. This is done by adding the user to to &lt;code&gt;vboxsf&lt;/code&gt; group as follows&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo usermod -aG vboxsf $(whoami)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Finally, mount the folder&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo mount -t vboxsf -o uid=$UID,gid=$(id -g) workmac work-vm
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Change the mount and directory names as appropriate for you. And that&amp;rsquo;s it! Now you should be able to access a mirror of the host folder inside the VM without any of the messy &lt;code&gt;rsync&lt;/code&gt; scripts. Note that if you reboot the VM, you&amp;rsquo;ll have to run the mount command again &amp;ndash; a requirement you can surpass by adding the line to your &lt;code&gt;.bashrc&lt;/code&gt; file.&lt;/p&gt;

&lt;h3 id=&#34;advantages-of-this-setup:0845bcb07a42949b6056d62ad8760900&#34;&gt;Advantages of this setup&lt;/h3&gt;

&lt;p&gt;It&amp;rsquo;s an extremely simple setup that has worked for me (and others I helped) each time. While for me, the reasons to do this centered around personal preference, I feel there are at least two good reasons to do it anyway&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The environment inside a VM can be precisely controlled, and doesn&amp;rsquo;t have to depend on, or mess with the host (Mac). It&amp;rsquo;s really easy to upgrade, or redo if things are failing. This also makes it easy to quickly experiment with different build environments.&lt;/li&gt;
&lt;li&gt;The setup is easier to reproduce and share with someone else.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So far, my use cases haven&amp;rsquo;t presented any disadvantages, though I suspect there could be situations where this couldn&amp;rsquo;t work. Feel free to share your experiences in the comments. The next step I&amp;rsquo;d like to explore would be to create a similar dev environment &lt;a href=&#34;http://www.ybrikman.com/writing/2015/05/19/docker-osx-dev/&#34;&gt;using Docker&lt;/a&gt; instead.&lt;/p&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:0845bcb07a42949b6056d62ad8760900:1&#34;&gt;You don&amp;rsquo;t want to know how git config files can go crazy.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:0845bcb07a42949b6056d62ad8760900:1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:0845bcb07a42949b6056d62ad8760900:2&#34;&gt;I&amp;rsquo;m surprised I even had to patience to go through all the steps.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:0845bcb07a42949b6056d62ad8760900:2&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:0845bcb07a42949b6056d62ad8760900:3&#34;&gt;To save some trouble if your Mac reboots, you might want to set a static IP address for the VM. How to do that is beyond the scope of this post.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:0845bcb07a42949b6056d62ad8760900:3&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Distributed Systems Resources</title>
      <link>http://nishanttotla.com/articles/distributed-systems-resources/</link>
      <pubDate>Sat, 02 Jan 2016 16:25:04 -0800</pubDate>
      
      <guid>http://nishanttotla.com/articles/distributed-systems-resources/</guid>
      <description>

&lt;p&gt;I started working on distributed systems in early 2016. Given that I had little to no background, I started trying to cover as much as possible from the literature out there.&lt;/p&gt;

&lt;p&gt;In this (dynamically updated) post, I intend to keep track of all good resources I come across in this quest. This includes not only research papers and books, but also good blogs, people to follow and discussions/meetups that could be helpful. Itâ€™s overwhelming to begin with, but everything thatâ€™s worthwhile has to start somewhere! This is obviously not a complete list, but hopefully the union of content within all entries on the list will be complete.&lt;/p&gt;

&lt;h3 id=&#34;blogs:dc4816fae14320f2f4f74f4d0f551d32&#34;&gt;Blogs&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;http://the-paper-trail.org/&#34;&gt;The Paper Trail&lt;/a&gt; by &lt;a href=&#34;https://twitter.com/HenryR&#34;&gt;Henry Robinson&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;books:dc4816fae14320f2f4f74f4d0f551d32&#34;&gt;Books&lt;/h3&gt;

&lt;h3 id=&#34;research-papers:dc4816fae14320f2f4f74f4d0f551d32&#34;&gt;Research Papers&lt;/h3&gt;

&lt;h3 id=&#34;people:dc4816fae14320f2f4f74f4d0f551d32&#34;&gt;People&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://twitter.com/HenryR&#34;&gt;Henry Robinson&lt;/a&gt;, Cloudera&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://twitter.com/pbailis&#34;&gt;Peter Bailis&lt;/a&gt;, Stanford University&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;meetups:dc4816fae14320f2f4f74f4d0f551d32&#34;&gt;Meetups&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Papers We Love [&lt;a href=&#34;https://twitter.com/papers_we_love&#34;&gt;Twitter&lt;/a&gt;] [&lt;a href=&#34;http://www.meetup.com/papers-we-love-too/&#34;&gt;San Francisco&lt;/a&gt;]&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;want-to-contribute-to-this-post:dc4816fae14320f2f4f74f4d0f551d32&#34;&gt;Want to Contribute to this post?&lt;/h3&gt;

&lt;p&gt;Please feel free to make suggestions or &lt;a href=&#34;https://github.com/nishanttotla/hugo-blog-skeleton/blob/master/content/articles/distributed-systems-resources.md&#34;&gt;submit a PR&lt;/a&gt;!&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>