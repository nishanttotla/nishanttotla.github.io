<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Notes on nRT</title>
    <link>http://nishanttotla.com/notes/</link>
    <description>Recent content in Notes on nRT</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 05 Apr 2016 12:05:11 -0700</lastBuildDate>
    <atom:link href="http://nishanttotla.com/notes/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>I&#39;m Not Here to Get Things Done</title>
      <link>http://nishanttotla.com/blog/not-here-to-get-things-done/</link>
      <pubDate>Tue, 05 Apr 2016 12:05:11 -0700</pubDate>
      
      <guid>http://nishanttotla.com/blog/not-here-to-get-things-done/</guid>
      <description>&lt;p&gt;I was talking to my friend &lt;a href=&#34;https://twitter.com/bothra90&#34;&gt;Abhay&lt;/a&gt; recently, and he brought up a very interesting idea. He works at a software startup that&amp;rsquo;s still relatively small, which means that there&amp;rsquo;s a certain amount of pressure to make quick progress and produce results. This requires having to churn out functioning code on a regular basis. Unfortunately, it&amp;rsquo;s often easy to write code by pattern-matching or copying from other sources &amp;ndash; but an entirely different thing to fully understand, and internalize what you&amp;rsquo;re doing. In the long term, only the latter will stick with you, making you a better engineer. Obviously, there has to be a healthy balance between the two. The problem though is that companies are typically paying you to do the former, while not always incentivizing the latter. This is what he said about his job&lt;/p&gt;

&lt;div class=&#34;custom-quote&#34;&gt;
  &lt;h1 class=&#34;icon-quote-left&#34;&gt;&lt;/i&gt;&lt;/h1&gt;
  &lt;p&gt;I&#39;m not here to get things done. I&#39;m here to learn. Things will get done as a side-effect of what I learn.
  &lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;I strongly believe that it&amp;rsquo;s largely your responsibility to ensure that you&amp;rsquo;re learning, and not succumbing to the pressure to show progress. The reason I liked his point of view was because it&amp;rsquo;s a good attitude to have, and helps to set expectations. In my own work, I have certainly written code I didn&amp;rsquo;t fully understand, had it compile and pass all tests. It&amp;rsquo;s easy to feel accomplished doing that, but important to remember it&amp;rsquo;s not the end goal.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>So Who Wants to Volunteer?</title>
      <link>http://nishanttotla.com/blog/who-wants-to-volunteer/</link>
      <pubDate>Sun, 03 Apr 2016 15:01:35 -0700</pubDate>
      
      <guid>http://nishanttotla.com/blog/who-wants-to-volunteer/</guid>
      <description>&lt;p&gt;In yesterday&amp;rsquo;s Yoga class, our instructor wanted to demonstrate a certain asana (pose). She could have easily done it herself, but she wanted a volunteer, perhaps so that she could point out common mistakes people make in this asana. So she asked &amp;ndash; &amp;ldquo;who wants to volunteer?&amp;rdquo;. As is common in such a situation, most people look around trying to deflect attention. I often do that too, but this time I just raised my hand, albeit a little reluctantly.&lt;/p&gt;

&lt;p&gt;I think I did an OK job being a model, but there was a useful lesson there &amp;ndash; even though being the center of attention was uncomfortable, I got more feedback on my posture than I normally would. The attention went away as the others got busy with trying the asana on their own, but the feedback stayed &amp;ndash; a net win for me.&lt;/p&gt;

&lt;p&gt;I think it&amp;rsquo;s useful to apply this little idea on other situations in life where we often forgo learning for comfort. The position of comfort is hard to leave, so it&amp;rsquo;s important to consciously make the choice to do so.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>